<Window x:Class="trackvisualizer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:trackvisualizer.Vm"
        xmlns:view="clr-namespace:trackvisualizer.View"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:localization="clr-namespace:trackvisualizer.Properties"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:TrackManagerVm}"
        FontSize="17"
        FontWeight="Medium"
        WindowState="Maximized"
        Title="{x:Static localization:Resources.MainWindow_Title}" Height="550" Width="900">
    <Grid Margin="{StaticResource ControlMargin}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Log -->
        <ListView Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"
                  view:VisibilityAux.IsVisible="{Binding Logging.LogHasEntries}"
                  ItemsSource="{Binding Logging.ActivityLog}"
                  FontSize="13">
            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:UiLogItemVm}">
                    <TextBlock Text="{Binding Text}" TextWrapping="Wrap" MaxWidth="200" Name="LogItem" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Important}" Value="True">
                            <Setter TargetName="LogItem" Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsError}" Value="True">
                            <Setter TargetName="LogItem" Property="Foreground"
                                    Value="{StaticResource ValidationBadColor}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>

        </ListView>

        <!-- Heightmap manipulations -->
        <Grid Grid.Column="0" Grid.Row="2"
              view:VisibilityAux.IsVisible="{Binding HeightmapManager.AreHeightmapsMissing}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Text="{x:Static localization:Resources.MainWindow_Route_HeightmapsMissingLabel}" FontWeight="Bold"
                       Foreground="{StaticResource ValidationBadColor}" Margin="{StaticResource ControlMargin}" />
            <ItemsControl Grid.Row="1" ItemsSource="{Binding HeightmapManager.MissingHeightmapNames}" HorizontalAlignment="Left">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel MaxWidth="270"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Margin="{StaticResource ControlMargin}" FontWeight="Bold"
                                   Background="{StaticResource ValidationBadColor}"
                                   Foreground="{StaticResource ValidationBadColorInverse}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button Grid.Row="2" Command="{Binding HeightmapManager.DownloadMissingHeightmapsCommand}"
                    Style="{StaticResource BasicButtonStyle}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Fill="{StaticResource AccentColor}" Width="24" Height="24"  Margin="5" VerticalAlignment="Center">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource AppbarDownload}" Stretch="Uniform"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Text="{x:Static localization:Resources.MainWindow_LoadHeightmaps_Label}" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </Grid>

        <!-- Source track selector -->
        <Grid Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- settings -->
            <Button Style="{StaticResource BasicButtonStyle}" Grid.Column="0" Click="SettingsButton_Click">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Fill="{StaticResource AccentColor}" Width="20" Height="20"  Margin="5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource AppbarSettings}" Stretch="Uniform"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </StackPanel>
                </Button.Content>
            </Button>

            <TextBlock Margin="{StaticResource ControlMargin}" Grid.Column="1" Text="{x:Static localization:Resources.MainWindow_LoadTrackLabel}"
                       VerticalAlignment="Center" />

            <!-- loading sign -->
            <Rectangle Grid.Column="2" Width="24" Height="24" Fill="{StaticResource AccentColor}" 
                       RenderTransformOrigin="0.5,0.5"
                       view:VisibilityAux.IsVisible="{Binding IsLoading}"
                       VerticalAlignment="Center">
                <Rectangle.Resources>
                    <Storyboard x:Key="RotationSb" TargetName="LoaderRt" TargetProperty="Angle">
                        <DoubleAnimation From="0" To="360" Duration="0:0:0.5" RepeatBehavior="Forever"/>
                    </Storyboard>
                </Rectangle.Resources>
                <Rectangle.RenderTransform>
                    <RotateTransform x:Name="LoaderRt"/>
                </Rectangle.RenderTransform>
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{StaticResource AppbarRefresh}" Stretch="Uniform"/>
                </Rectangle.OpacityMask>

                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Storyboard="{StaticResource RotationSb}"></BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>

            <!-- recently used tracks selector -->
            <ComboBox Grid.Column="3" Style="{StaticResource BasicComboBoxStyle}"
                      ItemsSource="{Binding AvailableTracks}"
                      SelectedItem="{Binding ActiveTrack}" IsSynchronizedWithCurrentItem="True">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:TrackVm}">
                        <TextBlock Text="{Binding SourceTrackFileName}" TextWrapping="Wrap" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!-- load from file -->
            <Button Style="{StaticResource BasicButtonStyle}" Grid.Column="4"
                    Command="{Binding LoadFromFileCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Fill="{StaticResource AccentColor}" Width="20" Height="20"  Margin="5">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource FolderOpen}" Stretch="Uniform"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Text="{x:Static localization:Resources.MainWindow_LoadButtonTitle}" VerticalAlignment="Center"/>
                    </StackPanel>

                </Button.Content>
            </Button>

        </Grid>

        <!-- Report data -->
        <TabControl Grid.Column="1" Grid.Row="1"
                    Grid.RowSpan="2">
            <TabControl.Items>
                <TabItem Header="{x:Static localization:Resources.MainWindow_RouteHeader}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DataGrid CanUserAddRows="False" CanUserDeleteRows="False"
                                  AutoGenerateColumns="False"
                                  GridLinesVisibility="None"
                                  AlternationCount="2"
                                  Grid.IsSharedSizeScope="True"
                                  ItemsSource="{Binding ActiveTrack.Report.Results}"
                                  Margin="{StaticResource ControlMargin}">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background"
                                                    Value="{StaticResource BackgroundAccentColor2}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background"
                                                    Value="{StaticResource BackgroundAccentColor}" />
                                            <Setter Property="Foreground" Value="#000" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background"
                                                    Value="{StaticResource BackgroundAccentColor}" />
                                            <Setter Property="Foreground" Value="#000" />
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_SectionNumHeader}"
                                                    Binding="{Binding SectionNumber}"
                                                    IsReadOnly="True" Width="Auto" MinWidth="30" />
                                <DataGridTemplateColumn Header="{x:Static localization:Resources.MainWindow_Route_SectionHeader}" Width="Auto" MinWidth="120">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type vm:TrackReportItemVm}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="SG1" />
                                                    <ColumnDefinition Width="*" MinWidth="30" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="SG1" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0"
                                                           Text="{Binding SectionStartName}" FontWeight="DemiBold"
                                                           TextWrapping="Wrap" MaxWidth="200" />
                                                <TextBlock Grid.Row="0" Grid.Column="1" Text="..." FontWeight="Thin"
                                                           HorizontalAlignment="Center" />
                                                <TextBlock Grid.Row="0" Grid.Column="2"
                                                           Text="{Binding NextSectionName}" FontWeight="DemiBold"
                                                           TextWrapping="Wrap" MaxWidth="200" />

                                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                                                           Text="{Binding Comment}" Name="SectionComment"
                                                           FontStyle="Italic" Opacity="0.5"
                                                           view:VisibilityAux.IsVisible="{Binding HasComment}"
                                                           TextWrapping="Wrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="{x:Type vm:TrackReportItemVm}">
                                            <TextBox Text="{Binding SectionStartName}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>

                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_DistanceHeader}"
                                                    Binding="{Binding DistanceMeters, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.MetersToKilometersLength}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_TimeHeader}"
                                                    Binding="{Binding LebedevHours, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.TimeHours}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_MaxHeightHeader}"
                                                    Binding="{Binding MaxHeight, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.MetersHeight}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_FinHeightHeader}"
                                                    Binding="{Binding SleepHeight, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.MetersHeight}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_DeltaHeightHeader}"
                                                    Binding="{Binding DeltaHeightAbsPerDay, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.MetersHeight}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_NotableHeightsHeader}"
                                                    Binding="{Binding ExtremeHeights, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.ExtremeHeightsList}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_DescentHeader}"
                                                    Binding="{Binding DescentPerDay, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.MetersHeight}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_AscentHeader}"
                                                    Binding="{Binding AscentPerDay, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.MetersHeight}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_BackpackWeightMHeader}"
                                                    Binding="{Binding MaleWeight, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.WeightKg}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_BackpackWeightFHeader}"
                                                    Binding="{Binding FemaleWeight, Converter={StaticResource DimensionConverter}, ConverterParameter={x:Static view:Dimension.WeightKg}}"
                                                    IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="{x:Static localization:Resources.MainWindow_Route_FietsHeader}"
                                                    Binding="{Binding FietsIndex, StringFormat={}0.0}"
                                                    IsReadOnly="True" Width="Auto" />

                                <DataGridTemplateColumn Header="..." Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type vm:TrackReportItemVm}">
                                            <StackPanel Orientation="Vertical" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>

                        </DataGrid>

                        <!-- export button -->
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Button Style="{StaticResource BasicButtonStyle}"
                                    Command="{Binding ActiveTrack.Report.ExportCommand}">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource AccentColor}" Width="24" Height="24"  Margin="5" VerticalAlignment="Center">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Visual="{StaticResource AppbarDisk}" Stretch="Uniform"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Text="{x:Static localization:Resources.MainWindow_Route_ExportLabel}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>

                    </Grid>

                </TabItem>
                <TabItem Header="{x:Static localization:Resources.MainWindow_HeightmapHeader}">
                    <wpf:CartesianChart Series="{Binding ActiveTrack.Report.Chart.Series}" LegendLocation="Right" >
                        <wpf:CartesianChart.AxisY>
                            <wpf:Axis LabelFormatter="{Binding ActiveTrack.Report.Chart.YFormatter}"></wpf:Axis>
                        </wpf:CartesianChart.AxisY>
                        <wpf:CartesianChart.AxisX>
                            <wpf:Axis LabelFormatter="{Binding ActiveTrack.Report.Chart.XFormatter}"></wpf:Axis>
                        </wpf:CartesianChart.AxisX>
                    </wpf:CartesianChart>
                </TabItem>
            </TabControl.Items>

        </TabControl>

        <!-- Settings -->

        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Vertical" Grid.RowSpan="2">
            <TextBlock Text="1" />
        </StackPanel>

    </Grid>
</Window>